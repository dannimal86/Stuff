# Load required libraries
library(ggplot2)
library(dplyr)
library(lubridate)
library(scales)

# Read the CSV file
data <- read.csv("your_file.csv", stringsAsFactors = FALSE)

# Convert exchange_time to POSIXct format
data$exchange_time <- dmy_hms(data$exchange_time)

# Calculate cumulative leave quantities by side, accounting for Non-Working actions
buy_data <- data %>%
  filter(side == "Buy") %>%
  arrange(exchange_time) %>%
  mutate(
    qty_change = case_when(
      action == "Non-Working" ~ -orderquantity,
      TRUE ~ leavequantity
    )
  ) %>%
  mutate(cum_qty = cumsum(qty_change))

sell_data <- data %>%
  filter(side == "Sell") %>%
  arrange(exchange_time) %>%
  mutate(
    qty_change = case_when(
      action == "Non-Working" ~ -orderquantity,
      TRUE ~ leavequantity
    )
  ) %>%
  mutate(cum_qty = cumsum(qty_change))

# Calculate net position from executedqty
net_position <- data %>%
  arrange(exchange_time) %>%
  mutate(
    exec_change = case_when(
      side == "Buy" ~ executedqty,
      side == "Sell" ~ -executedqty,
      TRUE ~ 0
    )
  ) %>%
  mutate(net_position = cumsum(exec_change))

# Find the range of values for scaling the secondary axis
max_buy <- max(abs(buy_data$cum_qty), na.rm = TRUE)
max_sell <- max(abs(sell_data$cum_qty), na.rm = TRUE)
max_cum_qty <- max(max_buy, max_sell)
max_net_pos <- max(abs(net_position$net_position), na.rm = TRUE)
# Avoid division by zero
scaling_factor <- if(max_net_pos > 0) max_cum_qty / max_net_pos else 1

# Create the plot with dual axis
ggplot() +
  # Bar chart for Buy quantities
  geom_col(
    data = buy_data,
    aes(x = exchange_time, y = cum_qty),
    fill = "blue",
    alpha = 0.7
  ) +
  # Bar chart for Sell quantities (stacked on top)
  geom_col(
    data = sell_data, 
    aes(x = exchange_time, y = cum_qty),
    fill = "red",
    alpha = 0.7
  ) +
  # Line for net position on secondary axis
  geom_line(
    data = net_position,
    aes(x = exchange_time, y = net_position * scaling_factor),
    color = "black",
    size = 1.2
  ) +
  # Primary and secondary y-axis
  scale_y_continuous(
    name = "Cumulative Leave Quantity",
    labels = scales::comma,
    sec.axis = sec_axis(
      ~ . / scaling_factor,
      name = "Net Position (Executed Qty)",
      labels = scales::comma
    )
  ) +
  # Other plot elements
  labs(
    title = "Order Activity Over Time",
    subtitle = "Blue: Buy quantities, Red: Sell quantities, Line: Net position",
    x = "Time"
  ) +
  # Add a manual legend since we're using separate geoms
  annotate("rect", xmin = -Inf, xmax = -Inf, ymin = -Inf, ymax = -Inf, 
           fill = "blue", alpha = 0.7) +
  annotate("rect", xmin = -Inf, xmax = -Inf, ymin = -Inf, ymax = -Inf, 
           fill = "red", alpha = 0.7) +
  annotate("segment", x = -Inf, xend = -Inf, y = -Inf, yend = -Inf,
           color = "black", size = 1.2) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold"),
    plot.subtitle = element_text(hjust = 0.5),
    legend.position = "top",
    axis.title.y.left = element_text(color = "darkgrey"),
    axis.title.y.right = element_text(color = "black")
  )

# Add proper legend
p <- last_plot() +
  scale_fill_manual(
    name = "Side",
    values = c("Buy" = "blue", "Sell" = "red"),
    labels = c("Buy", "Sell")
  ) +
  guides(
    fill = guide_legend(override.aes = list(alpha = 0.7)),
    color = guide_legend(title = "Net Position")
  )

print(p)
